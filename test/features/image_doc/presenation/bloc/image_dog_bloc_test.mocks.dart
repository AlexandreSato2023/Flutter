// Mocks generated by Mockito 5.3.2 from annotations
// in examplearch/test/features/image_doc/presenation/bloc/image_dog_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:examplearch/core/errors/error_base.dart' as _i7;
import 'package:examplearch/core/usecase/usecase_base.dart' as _i9;
import 'package:examplearch/features/image_dog/domain/entities/dog.dart' as _i8;
import 'package:examplearch/features/image_dog/domain/repositories/image_dog_repository.dart'
    as _i2;
import 'package:examplearch/features/image_dog/domain/usecases/get_image_dog_usecase.dart'
    as _i5;
import 'package:examplearch/features/image_dog/presentation/bloc/image_dog_bloc.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeImageDogRepository_0 extends _i1.SmartFake
    implements _i2.ImageDogRepository {
  _FakeImageDogRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetImageDogEvent].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetImageDogEvent extends _i1.Mock implements _i4.GetImageDogEvent {
  MockGetImageDogEvent() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
}

/// A class which mocks [GetImageDogUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetImageDogUseCase extends _i1.Mock
    implements _i5.GetImageDogUseCase {
  MockGetImageDogUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ImageDogRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeImageDogRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ImageDogRepository);
  @override
  _i6.Future<_i3.Either<_i7.ErrorBase, _i8.Dog>> call(_i9.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.ErrorBase, _i8.Dog>>.value(
            _FakeEither_1<_i7.ErrorBase, _i8.Dog>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.ErrorBase, _i8.Dog>>);
}
